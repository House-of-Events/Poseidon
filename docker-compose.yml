version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: poseidon-postgres
    environment:
      POSTGRES_DB: poseidon-docker
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5429:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d poseidon-docker']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # LocalStack for local AWS services (SQS, etc.)
  localstack:
    image: localstack/localstack:latest
    container_name: poseidon-localstack
    environment:
      - SERVICES=sqs,s3
      - DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      - '4566:4566'
    volumes:
      - localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4566/_localstack/health']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: poseidon-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@poseidon.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:
  localstack_data:
